from aiogram import Router, F
from aiogram.types import Message, FSInputFile  # ‚Üê –î–û–ë–ê–í–ò–õ–ò –ò–ú–ü–û–†–¢!
from config import ADMINS
from utils.exporter import export_to_excel, export_to_word
from database.db import get_all_data
from keyboards.reply import admin_keyboard, main_menu_keyboard, back_to_admin_keyboard
from datetime import datetime
import logging
import os

logger = logging.getLogger(__name__)
router = Router()

@router.message(F.text == '/start', F.from_user.id.in_(ADMINS))
async def admin_start_handler(message: Message):
    await message.answer("üëë **–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –°–≠–°**")
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=admin_keyboard)

# üî• –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –û–ë–†–ê–ë–û–¢–ß–ò–ö EXCEL
@router.message(F.text.contains("Excel"))
async def export_excel_handler(message: Message):
    logger.info(f"üéâ EXCEL –ù–ê–ñ–ê–¢–ê: '{message.text}'!")
    await message.answer("üìä –°–æ–∑–¥–∞—é Excel-–æ—Ç—á—ë—Ç...")
    
    file_path = export_to_excel()
    
    if file_path and os.path.exists(file_path):
        # ‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú FSInputFile –≤–º–µ—Å—Ç–æ open()
        document = FSInputFile(file_path)
        total = len(get_all_data())
        
        await message.answer_document(
            document,
            caption=f"‚úÖ **–û—Ç—á—ë—Ç –°–≠–°** | {total} —É—á—Ä–µ–∂–¥–µ–Ω–∏–π"
        )
        
        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        os.remove(file_path)
        logger.info(f"Excel —Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ —É–¥–∞–ª–µ–Ω: {file_path}")
    else:
        await message.answer("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")
    
    await message.answer("‚úÖ –ì–æ—Ç–æ–≤–æ!", reply_markup=back_to_admin_keyboard)

# üìù –û–ë–†–ê–ë–û–¢–ß–ò–ö WORD (—Ç–æ–∂–µ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º)
@router.message(F.text.contains("Word"))
async def export_word_handler(message: Message):
    logger.info(f"üìù WORD –ù–ê–ñ–ê–¢–ê: '{message.text}'!")
    await message.answer("üìù –°–æ–∑–¥–∞—é Word-–æ—Ç—á—ë—Ç...")
    
    file_path = export_to_word()
    
    if file_path and os.path.exists(file_path):
        # ‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú FSInputFile
        document = FSInputFile(file_path)
        total = len(get_all_data())
        
        await message.answer_document(
            document,
            caption=f"‚úÖ **–û—Ç—á—ë—Ç –°–≠–° (Word)** | {total} —É—á—Ä–µ–∂–¥–µ–Ω–∏–π"
        )
        
        os.remove(file_path)
        logger.info(f"Word —Ñ–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏ —É–¥–∞–ª–µ–Ω: {file_path}")
    else:
        await message.answer("‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")
    
    await message.answer("‚úÖ –ì–æ—Ç–æ–≤–æ!", reply_markup=back_to_admin_keyboard)

@router.message(F.text.contains("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
async def stats_handler(message: Message):
    logger.info(f"üìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ù–ê–ñ–ê–¢–ê: '{message.text}'!")
    data = get_all_data()
    total = len(data)
    
    # –ü–æ–¥—Å—á–µ—Ç –ø–æ —Ç–∏–ø–∞–º
    schools = sum(1 for d in data if d.institution_type == "–®–∫–æ–ª–∞")
    colleges = sum(1 for d in data if d.institution_type == "–¢–µ—Ö–Ω–∏–∫—É–º / –ö–æ–ª–ª–µ–¥–∂")
    universities = sum(1 for d in data if d.institution_type == "–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç")
    
    stats_text = (
        f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á—Ä–µ–∂–¥–µ–Ω–∏–π:**\n\n"
        f"üè´ –í—Å–µ–≥–æ: {total}\n"
        f"üìö –®–∫–æ–ª: {schools}\n"
        f"üéì –¢–µ—Ö–Ω–∏–∫—É–º–æ–≤/–ö–æ–ª–ª–µ–¥–∂–µ–π: {colleges}\n"
        f"üèõ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–æ–≤: {universities}"
    )
    
    await message.answer(stats_text, reply_markup=back_to_admin_keyboard)

@router.message(F.text == "üîô –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message):
    await message.answer("–ü–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é...", reply_markup=main_menu_keyboard)

@router.message(F.text == "üè† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
async def back_to_admin(message: Message):
    if message.from_user.id in ADMINS:
        await message.answer("üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", reply_markup=admin_keyboard)